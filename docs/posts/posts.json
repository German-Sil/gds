[
  {
    "path": "posts/2022-02-20-welcome/",
    "title": "Data Visualization and T-tests",
    "description": "Exploring data and performing a type of hypothesis testing",
    "author": [
      {
        "name": "Germán Silva",
        "url": {}
      }
    ],
    "date": "2022-02-20",
    "categories": [],
    "contents": "\r\nOverview\r\nThis blog post highlights an example of code done for an assignment in ESM 206 at UCSB’s Bren School of Environmental Science and Managment. The task looks at data from the 2017 update by Lightwood, D. of the Jornada LTER lizard pitfall data from 1989 to 2006. The main question examined in the code is the differences in length (mm) between females of two lizard species: Cnemidophorus uniparens (Desert Grassland lizard) and Cnemidophorus tessalatus (Colorado Checkered lizard). Methods used to address this question include: exploratory data visualization, box and scatter plots, summary statistics, t-tests, and Cohen’s d, among other general data science practices. Each code chunk will be proceeded with explanations for the code.\r\nCode and Explanations\r\nThis is the set up chunk which allows for the setting of rendering options, such as the suppression of warnings and messages, but also for the attaching of packages that will be useful through out the task at hand.\r\n\r\n\r\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)\r\n# attach packages\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(ggbeeswarm)\r\n\r\n\r\n\r\nBy using read_csv() we are able to open a .csv file into the code. The subsequent code allows us to clean and wrangle the data into a more manageable format and removes excess information that is not related to the task we are performing. In this case, I kept columns related to sex, species, and body length, and then filtered for rows that contained the individuals of the species and sex that were were comparing.\r\n\r\n\r\n# Creation of a stored object that includes a simplified version of the data\r\nlizards <- read_csv(here(\"_posts\", \"2022-02-20-welcome\",\"data\", \"lizards.csv\")) %>% # read in the data\r\n  select(spp, sex, total_length) %>% # \r\n  filter(sex == \"F\",\r\n         spp %in% c(\"CNUN\", \"CNTE\"))\r\n\r\n\r\n\r\nLooking at the Data\r\nData visualization is an important part of exploring your data so that you can see what the data looks like before making a decision on how to analyze it. This set of code makes a combined point and box plot as a way of showing data spread and data summary statistics. A similar plot can be achieved by making violin plots, but I find this way more visually appealing.\r\n\r\n\r\nggthemr::ggthemr('dust')\r\n\r\nggplot(lizards, aes(x=spp, y=total_length))+ # call data and mapping\r\n  geom_beeswarm(aes(fill=spp), shape= 21, color = \"brown\") + # add beeswarm plot\r\n  geom_boxplot(aes(fill=spp),\r\n               alpha=0.45,\r\n               width = 0.2,\r\n               outlier.color = NA) + # overlay boxplot\r\n  scale_fill_manual(values = calecopal::cal_palette(\"coastaldune1\",\r\n                                                     n= 2, \r\n                                                     type = \"discrete\"))+\r\n  scale_x_discrete(labels = c(\"Cnemidophorus tessalatus\", \r\n                              \"Cnemidophorus uniparens\")) + # x-axis tick labels\r\n  ggtitle(\"Total Length of Observed Female Lizards by Species\") + # title\r\n  theme(legend.position = \"none\") + # theme edits\r\n  labs(x= \"Species Name\",\r\n       y= \"Total Length (mm)\") # add labels for axes\r\n\r\n\r\n\r\n\r\nFigure 1: Boxplots and respective data point showing the total length for female lizards by respective species. Plots indicate that median female Cnemidophorus uniparens total length is less than the median female Cnemidophorus tessalatus length.\r\n\r\n\r\n\r\nOnce data has been visualized, it is important to obtain actual values for the summary statistics so you can talk in terms of actual numbers. This can often be achieved with the creation of a summary data frame and a table. The group_by() and summarise() functions are helpful in the creation of a summary data frame, with kable() being able to create a table from the resulting data frame.\r\n\r\n\r\n# Obtain summary stats\r\nlizards_summary <- lizards %>% \r\n  mutate(spp = case_when(\r\n    spp == \"CNTE\" ~ \"C. tessalatus\",\r\n    spp == \"CNUN\" ~ \"C. uniparens\"\r\n  )) %>% \r\n  group_by(spp) %>% \r\n  summarise(mean = mean(total_length, na.rm = TRUE),\r\n            sd = sd(total_length, na.rm = TRUE),\r\n            sample_size = n())\r\n# Convert into finalized table\r\nkableExtra::kable(lizards_summary,\r\n                  col.names = c(\"Species\", \r\n                                \"Mean Length (mm)\", \r\n                                \"Standard Deviation (mm)\", \r\n                                \"Sample Size\"),\r\n                  caption = \"Table 1 Summary Statistics for Female Lizards by Species\") %>% \r\n  kableExtra::kable_classic(full_width = FALSE)\r\n\r\n\r\n\r\nTable 1: Table 1 Summary Statistics for Female Lizards by Species\r\n\r\n\r\nSpecies\r\n\r\n\r\nMean Length (mm)\r\n\r\n\r\nStandard Deviation (mm)\r\n\r\n\r\nSample Size\r\n\r\n\r\nC. tessalatus\r\n\r\n\r\n244.8929\r\n\r\n\r\n47.32499\r\n\r\n\r\n28\r\n\r\n\r\nC. uniparens\r\n\r\n\r\n147.6000\r\n\r\n\r\n34.55341\r\n\r\n\r\n47\r\n\r\n\r\nHypothesis Testing\r\nQuestion:\r\nIs there a significant difference in total length difference in mean total length between female lizards for the two species?\r\nTo answer this question, with a parametric hypothesis test, we must first check for any violation of the assumptions for a t-test. This can be achieved with a histogram and a QQplot. The code below creates two simple versions of both plots to check for these violations.\r\n\r\n\r\n# Explore data to ensure that hypothesis testing can be done without violation of assumptions\r\nggplot(data = lizards, aes(x= total_length))+\r\n  geom_histogram()+ \r\n  facet_wrap(~spp)\r\n\r\n\r\n\r\nggplot(lizards, aes(sample=total_length))+\r\n  geom_qq()+\r\n  facet_wrap(~spp)\r\n\r\n\r\n\r\n\r\nBoth diagnostics are a bit concerning. Histograms seems to be somewhat close to normal, but QQ plots are a bit more concerning for assumptions of hypothesis testing. Law of large numbers would imply that means of samples would be normally distributed, both have moderately sized samples (n= 29 and 47 respectively). With Law of Large numbers, we can proceed with the t-test.\r\nTo perform a t-test, we need our data to be free of NA values. We first filter the data for the individuals from each respective group and remove the NA values. Two metrics are used to get an understanding of the differences between the two populations of lizards: Cohen’s d and t-test p-value. To get these metrics, I used effsize::cohen_d() and t.test().\r\n\r\n\r\n# Performing a t-test\r\ncnte <- lizards %>% \r\n  filter(spp == \"CNTE\") %>% \r\n  na.omit()\r\ncnun <- lizards %>% \r\n  filter(spp == \"CNUN\") %>% \r\n  na.omit()\r\ncohen_d <- effsize::cohen.d(cnte$total_length, cnun$total_length)\r\nt_test <- t.test(cnte$total_length, cnun$total_length)\r\n\r\n\r\n\r\nAnswer:\r\nWhile there may be potential violations of assumptions, hypothesis testing can be done under the assumption that the law of large numbers applies to this data sample. Hypothesis testing shows that the mean length difference of 97.29 mm is statistically significant (p-value = 3.75 * 10-12), with the p-value indicating that there is a 3.75 * 10-10 % chance that we would get sample means that were at least this different if the true means are the same, and a Cohen’s d (d = 2.42) indicating that there is a true and noticeable difference between the mean lengths of the two species.\r\nReferences:\r\nBui, An, Lowman, Heili, Guerra, Ana Sofia, and Miller-ter Kuile, Ana (2021). “calecopal: A California-inspired Package of Color Palettes.” R package version 0.1.0.\r\nClarke, Erik and Sherrill-Mix, Scott (2017). ggbeeswarm: Categorical Scatter (Violin Point) Plots. R package version 0.6.0. https://CRAN.R-project.org/package=ggbeeswarm\r\nLightfoot, D. (2017). Lizard pitfall trap data (LTER-II, LTER-III) ver 36. Environmental Data Initiative. https://doi.org/10.6073/pasta/ff37b4cace16a9943575f3fd7067064e\r\nMüller, Kirill (2020). “here: A Simpler Way to Find Your Files.” R package version 1.0.1. https://CRAN.R-project.org/package=here\r\nTorchiano M (2020). effsize: Efficient Effect Size Computation. doi: 10.5281/zenodo.1480624 (URL: https://doi.org/10.5281/zenodo.1480624), R package version 0.8.1, <URL: https://CRAN.R-project.org/package=effsize>.\r\nWickham et al., (2019). “Welcome to the tidyverse.” Journal of Open Source Software, 4(43), 1686, https://doi.org/10.21105/joss.01686\r\nZhu, Hao (2021). “kableExtra: Construct Complex Table with ‘kable’ and Pipe Syntax.” R package version 1.3.4. https://CRAN.R-project.org/package=kableExtra\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-02-20-welcome/welcome_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2022-03-10T15:27:47-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-01-18-welcome/",
    "title": "Let's Talk Reproducible Data Science",
    "description": "Learn about two tools to help you work with data in a more reproducible way",
    "author": [
      {
        "name": "Germán Silva",
        "url": {}
      }
    ],
    "date": "2022-02-02",
    "categories": [],
    "contents": "\r\nIntro\r\nI’m sure that if you are least somewhat familiar with coding then you have had to deal with the issue of having to navigate file paths and working directories. Maybe you have even had to work with someone’s code and had to update broken file paths or reset hard coded working directories? If that sounds like you, you might have thought to yourself, “F**k this! There must be a much easier way to deal with this stuff!”\r\nWell there is no need to swear anymore as there totally is a much easier way to do this and in a way that will be reproducible for others to do! Let me introduce you to two little things that will perhaps make your life much easier: the {here} package and Rprojects.\r\nSo what are {here} and Rprojects?\r\nSimply put they are a way to work within self-contained folders with relative file paths.\r\nYou see a R project is like making a partitioned folder that acts itself a bit like a working directory, with all subdirectories within the folder containing the .Rproj file also being connected to that directory. So if someone needs to work with your code and data, you would have a nice self contained folder that you can zip up and send to them and they would be able to work with it right away without having to reset working directories or figure out where all the data is all over again.\r\nHowever, what happens when you have a different operating system that your colleague? MACos and Windows use different notations for their filepaths and then what good would having a Rproject do for you?\r\nWell this is where using relative filepaths helps you out and {here} is well… here to help! You see {here} functions by assuming the place that your Rproject is at is the home directory and then merely looks for directories by name rather than by absolute paths. So instead of having to say read_csv(\"C:\\Users\\German\\Documents\\UCSB\\data\\example.csv\"), you would instead write read_csv(here(\"data\", \"example.csv\")), not only is it much less to write, but it ignores differences in filepath notation and allows for you to much more easily reproduce code and share it with others without having to worry about the differences in operating systems or filepath structures!\r\nI hope that this has been insightful and that you play with some more reproducible data science!\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-03-10T15:27:47-08:00",
    "input_file": {}
  }
]
